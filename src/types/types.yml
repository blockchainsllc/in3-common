#***********************************************************
# This file is part of the Slock.it IoT Layer.             *
# The Slock.it IoT Layer contains:                         *
#   - USN (Universal Sharing Network)                      *
#   - INCUBED (Trustless INcentivized remote Node Network) *
#***********************************************************
# Copyright (C) 2016 - 2018 Slock.it GmbH                  *
# All Rights Reserved.                                     *
#***********************************************************
# You may use, distribute and modify this code under the   *
# terms of the license contract you have concluded with    *
# Slock.it GmbH.                                           *
# For information about liability, maintenance etc. also   *
# refer to the contract concluded with Slock.it GmbH.      *
#***********************************************************
# For more information, please refer to https://slock.it    *
# For questions, please contact info@slock.it              *
#**********************************************************/
$schema: http://json-schema.org/schema#
description: configuration-data for the Incubed-client / server
definitions:
    IN3NodeWeight:
        description: a local weight of a n3-node. (This is used internally to weight the requests)
        type: object
        properties:
            weight:
                description: factor the weight this noe (default 1.0)
                type: number
                example: 0.5
            responseCount:
                description: number of uses.
                type: integer
                example: 147
            avgResponseTime:
                description: average time of a response in ms
                type: number
                example: 240
            pricePerRequest:
                description: last price
                type: integer
            lastRequest:
                description: timestamp of the last request in ms
                type: integer
                example: 1529074632623
            blacklistedUntil:
                description: blacklisted because of failed requests until the timestamp
                type: integer
                example: 1529074639623
    IN3RPCRequestConfig:
        description: additional config for a IN3 RPC-Request
        required: [chainId]
        properties:
            chainId:
                description: the requested chainId
                type: string
                example: "0x1"
                format: hex
            includeCode:
                description: if true, the request should include the codes of all accounts. otherwise only the the codeHash is returned. In this case the client may ask by calling eth_getCode() afterwards
                type: boolean
                example: true
            verifiedHashes:
                description: if the client sends a array of blockhashes the server will not deliver any signatures or blockheaders for these blocks, but only return a string with a number.
                type: array
                items:
                    type: string
                    format: bytes32
            latestBlock:
                description: if specified, the blocknumber *latest* will be replaced by blockNumber- specified value
                type: integer
                example: 6
            useRef:
                description: if true binary-data (starting with a 0x) will be refered if occuring again.
                type: boolean
            useBinary:
                description: if true binary-data will be used.
                type: boolean
            useFullProof:
                description: if true all data in the response will be proven, which leads to a higher payload.
                type: boolean
            finality:
                description: if given the server will deliver the blockheaders of the following blocks until at least the number in percent of the validators is reached.
                type: number
            verification:
                description: defines the kind of proof the client is asking for
                type: string
                enum: [never, proof, proofWithSignature]
                example: "proof"
            clientSignature:
                description: the signature of the client
            signatures:
                description: a list of addresses requested to sign the blockhash
                type: array
                example: ["0x6C1a01C2aB554930A937B0a2E8105fB47946c679"]
                items:
                    type: string
                    format: address

    Signature:
        description: Verified ECDSA Signature. Signatures are a pair (r, s). Where r is computed as the X coordinate of a point R, modulo the curve order n.
        type: object
        required: [r, s, v, msgHash, block, blockHash]
        properties:
            address:
                type: string
                description: the address of the signing node
                format: address
                example: "0x6C1a01C2aB554930A937B0a2E8105fB47946c679"
            block:
                type: number
                description: the blocknumber
                example: 3123874
            blockHash:
                type: string
                description: the hash of the block
                example: "0x6C1a01C2aB554930A937B0a212346037E8105fB47946c679"
                format: bytes32
            msgHash:
                type: string
                description: hash of the message
                format: bytes32
                example: "0x9C1a01C2aB554930A937B0a212346037E8105fB47946AB5D"
            r:
                type: string
                description: Positive non-zero Integer signature.r
                format: hex
                example: "0x72804cfa0179d648ccbe6a65b01a6463a8f1ebb14f3aff6b19cb91acf2b8ec1f"
            s:
                type: string
                description: Positive non-zero Integer signature.s
                format: hex
                example: "0x6d17b34aeaf95fee98c0437b4ac839d8a2ece1b18166da704b86d8f42c92bbda"
            v:
                type: integer
                description: Calculated curve point, or identity element O.
                format: hex
                example: 28

    IN3ResponseConfig:
        type: object
        description: additional data returned from a IN3 Server
        properties:
            proof:
                description: the Proof-data
                $ref: "#/definitions/Proof"
            lastNodeList:
                description: the blocknumber for the last block updating the nodelist. If the client has a smaller blocknumber he should update the nodeList.
                type: number
                example: 326478
            lastValidatorChange:
                description: the blocknumber of gthe last change of the validatorList
                type: number
            currentBlock:
                description: the current blocknumber.
                type: number
                example: 320126478

    RPCRequest:
        type: object
        description: a JSONRPC-Request with N3-Extension
        required: [jsonrpc, method]
        properties:
            jsonrpc:
                description: the version
                type: string
                enum: ["2.0"]
            method:
                description: the method to call
                type: string
                example: eth_getBalance
            id:
                description: the identifier of the request
                type: [number, string]
                example: 2
            params:
                description: the params
                type: array
                example: ["0xe36179e2286ef405e929C90ad3E70E649B22a945", latest]
            in3:
                description: the IN3-Config
                $ref: "#/definitions/IN3RPCRequestConfig"

    RPCResponse:
        type: object
        description: a JSONRPC-Responset with N3-Extension
        required: [jsonrpc, id]
        properties:
            jsonrpc:
                description: the version
                type: string
                enum: ["2.0"]
            id:
                description: the id matching the request
                type: [string, number]
                example: 2
            error:
                description: in case of an error this needs to be set
                type: string
            result:
                description: the params
                example: "0xa35bc"
            in3:
                description: the IN3-Result
                $ref: "#/definitions/IN3ResponseConfig"

            in3Node:
                description: the node handling this response (internal only)
                $ref: "#/definitions/IN3NodeConfig"
    IN3NodeConfig:
        description: a configuration of a in3-server.
        type: object
        required: [address, url, deposit, chainIds]
        properties:
            index:
                description: the index within the contract
                type: integer
                example: 13
            address:
                description: the address of the node, which is the public address it iis signing with.
                type: string
                format: address
                example: "0x6C1a01C2aB554930A937B0a2E8105fB47946c679"
            timeout:
                description: the time (in seconds) until an owner is able to receive his deposit back after he unregisters himself
                type: integer
                example: 3600
            url:
                description: the endpoint to post to
                type: string
                example: "https://in3.slock.it"
            chainIds:
                description: the list of supported chains
                example: ["0x1"]
                type: array
                items:
                    type: string
                    format: hex
            deposit:
                description: the deposit of the node in wei
                type: integer
                example: 12350000
            capacity:
                description: the capacity of the node.
                type: integer
                example: 100
            props:
                description: the properties of the node.
                type: integer
                example: 3
    LogProof:
        type: object
        description: a Object holding proofs for event logs. The key is the blockNumber as hex
        additionalProperties:
            type: object
            required: [block, receipts]
            properties:
                number:
                    description: the blockNumber
                    type: number
                block:
                    description: the serialized blockheader
                    type: string
                    example: "0x72804cfa0179d648ccbe6a65b01a6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b86d8f42c92bbda6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b"
                allReceipts:
                    description: temp. list of all receipts, which is not included in the final proof
                    type: array
                receipts:
                    description: the map of existing receipts with the txHash as key
                    type: object
                    additionalProperties:
                        type: object
                        required: [txIndex, proof]
                        properties:
                            txHash:
                                type: string
                                description: the transactionHash
                            txIndex:
                                type: integer
                                description: the transactionIndex within the block
                            txProof:
                                type: array
                                description: the merkleProof
                                items:
                                    type: string
                                    pattern: ^0x[0-9a-fA-F]+$
                            proof:
                                type: array
                                description: the merkleProof
                                items:
                                    type: string
                                    pattern: ^0x[0-9a-fA-F]+$
    Proof:
        type: object
        description: the Proof-data as part of the in3-section
        required: [type]
        properties:
            type:
                description: the type of the proof
                type: string
                enum:
                    [
                        transactionProof,
                        receiptProof,
                        blockProof,
                        accountProof,
                        callProof,
                        logProof
                    ]
                example: accountProof
            block:
                type: string
                description: the serialized blockheader as hex, required in most proofs
                example: "0x72804cfa0179d648ccbe6a65b01a6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b86d8f42c92bbda6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b"
            finalityBlocks:
                type: array
                description: the serialized blockheader as hex, required in case of finality asked
                example:
                    [
                        "0x72804cfa0179d648ccbe6a65b01a6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b86d8f42c92bbda6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b",
                    ]
            transactions:
                type: array
                description: the list of transactions of the block
                example: []
            uncles:
                type: array
                description: the list of uncle-headers of the block
                example: []
            merkleProof:
                type: array
                description: the serialized merle-noodes beginning with the root-node
                exmaple:
                    [
                        "0x72804cfa0179d648ccbe6a65b01a6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b86d8f42c92bbda6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b",
                        "0x01a6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b86d8f42c92bbda6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1",
                        "0xcf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b86d8f42c92bbd",
                    ]
                items:
                    type: string
                    pattern: ^0x[0-9a-fA-F]+$
            merkleProofPrev:
                type: array
                description: the serialized merkle-noodes beginning with the root-node of the previous entry (only for full proof of receipts)
                exmaple:
                    [
                        "0x72804cfa0179d648ccbe6a65b01a6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b86d8f42c92bbda6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b",
                        "0x01a6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b86d8f42c92bbda6463a8f1ebb14f3aff6b19cb91acf2b8ec1ffee98c0437b4ac839d8a2ece1",
                        "0xcf2b8ec1ffee98c0437b4ac839d8a2ece1b18166da704b86d8f42c92bbd",
                    ]
                items:
                    type: string
                    pattern: ^0x[0-9a-fA-F]+$
            txProof:
                type: array
                description: the serialized merkle-nodes beginning with the root-node in order to prrof the transactionIndex
                items:
                    type: string
                    pattern: ^0x[0-9a-fA-F]+$
            logProof:
                description: the Log Proof in case of a Log-Request
                $ref: "#/definitions/LogProof"
            accounts:
                type: object
                description: a map of addresses and their AccountProof
                additionalProperties:
                    $ref: "#/definitions/AccountProof"
            txIndex:
                type: integer
                description: the transactionIndex within the block
                example: 4
            signatures:
                type: array
                description: requested signatures
                items:
                    $ref: "#/definitions/Signature"

    AccountProof:
        type: object
        description: the Proof-for a single Account
        required:
            [
                accountProof,
                address,
                balance,
                codeHash,
                nonce,
                storageHash,
                storageProof,
            ]
        properties:
            accountProof:
                type: array
                description: the serialized merle-noodes beginning with the root-node
                items:
                    type: string
                    pattern: ^0x[0-9a-fA-F]+$
            address:
                type: string
                description: the address of this account
                pattern: ^0x[0-9a-fA-F]+$
            balance:
                type: string
                description: the balance of this account as hex
                pattern: ^0x[0-9a-fA-F]+$
            codeHash:
                type: string
                description: the codeHash of this account as hex
                pattern: ^0x[0-9a-fA-F]+$
            code:
                type: string
                description: the code of this account as hex ( if required)
                pattern: ^0x[0-9a-fA-F]+$
            nonce:
                type: string
                description: the nonce of this account as hex
                pattern: ^0x[0-9a-fA-F]+$
            storageHash:
                type: string
                description: the storageHash of this account as hex
                pattern: ^0x[0-9a-fA-F]+$
            storageProof:
                type: array
                description: proof for requested storage-data
                items:
                    type: object
                    required: [key, proof, value]
                    properties:
                        key:
                            type: string
                            description: the storage key
                            pattern: ^0x[0-9a-fA-F]+$
                        proof:
                            type: array
                            description: the serialized merkle-noodes beginning with the root-node ( storageHash )
                            items:
                                type: string
                                pattern: ^0x[0-9a-fA-F]+$
                        value:
                            type: string
                            description: the stored value
                            pattern: ^0x[0-9a-fA-F]+$